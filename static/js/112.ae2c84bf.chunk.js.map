{"version":3,"file":"static/js/112.ae2c84bf.chunk.js","mappings":"8NA0CA,UAtCqB,WACb,OAA4BA,EAAAA,EAAAA,UAAS,MAArC,eAAOC,EAAP,KAAeC,EAAf,KAEOC,GAAWC,EAAAA,EAAAA,MAAXD,QAkBP,OAhBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,uFAClBH,EADkB,2EAMCI,EAAAA,EAAAA,IAAgB,CAACJ,QAAAA,IANlB,OAMZK,EANY,OAOlBN,EAAUM,GAPQ,gDASlBC,QAAQC,IAAI,KAAMC,MATA,yDAAH,qDAYvBL,GACH,GAAE,CAACH,KAGA,gCACXF,GAAsC,IAA5BA,EAAOO,KAAKI,aAAqB,4CAC3CX,GACGA,EAAOO,KAAKK,QAAQC,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAAV,OACpB,4BACI,wBAAG,oCAAYD,EAAZ,UACP,uBAAIC,MAFMD,EADU,MASnB,C,2MCpCHE,EAAW,+BACXC,EAAM,mCAECC,EAAuB,mCAAG,oGACZC,IAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IADxC,cAC7BG,EAD6B,yBAE5BA,GAF4B,2CAAH,qDAKvBC,EAAoB,mCAAG,wGAASC,MAAAA,OAAT,MAAiB,GAAjB,MAAqBC,KAAAA,OAArB,MAA4B,EAA5B,WACTJ,IAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,gCAAyEM,EAAzE,sCAA2GD,IADlG,cAC1BF,EAD0B,yBAEzBA,GAFyB,2CAAH,sDAMpBI,EAAgB,mCAAG,8FAAStB,EAAT,EAASA,QAAT,SACLiB,IAAAA,IAAA,UAAaH,EAAb,kBAA+Bd,EAA/B,oBAAkDe,EAAlD,oBADK,cACtBG,EADsB,yBAErBA,GAFqB,2CAAH,sDAMhBK,EAAY,mCAAG,8FAAQvB,EAAR,EAAQA,QAAR,SACDiB,IAAAA,IAAA,UAAaH,EAAb,kBAA+Bd,EAA/B,4BAA0De,IADzD,cAClBG,EADkB,yBAEjBA,GAFiB,2CAAH,sDAKZd,EAAe,mCAAG,8FAAQJ,EAAR,EAAQA,QAAR,SACJiB,IAAAA,IAAA,UAAaH,EAAb,kBAA+Bd,EAA/B,4BAA0De,EAA1D,2BADI,cACrBG,EADqB,yBAEpBA,GAFoB,2CAAH,qD","sources":["components/MoreInfoAboutMovie/ReviewsMovie.jsx","services/getSearchMovies.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviewsMovie } from 'services/getSearchMovies';\n\nconst ReviewsMovie = () => {\n        const [review, setReview] = useState(null);\n        \n        const {movieId} = useParams();\n        \n        useEffect(()=> {\n            const fetchReviewsMovie = async () => {\n                if(!movieId) {\n                    return;\n                }\n        \n                try {\n                    const data = await getReviewsMovie({movieId});\n                    setReview(data);\n                } catch (error) {\n                    console.log(error.name)\n                }\n            }\n            fetchReviewsMovie();\n        }, [movieId]);\n\n        return (\n            <>\n{review && review.data.total_pages === 0 && \"We don't have any reviews for this movie!\"}\n{review && (\n    review.data.results.map(({author, content}) => (\n        <div key={author}>\n            <p><b>Author: {author} </b></p>\n        <p>{content}</p>    \n        </div>\n    ))\n  )}\n  </>\n        )\n        }\n        \n     \n\nexport default ReviewsMovie;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'f17c8764406c58be1dc553dcf8d1d1db';\n\nexport const getSearchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    return response;\n}\n\nexport const getSearchQueryMovies = async ({ query = '', page = 1}) => {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`)\n    return response;\n    \n}\n\nexport const getMoviesDetails = async ( {movieId} ) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`)\n    return response;\n}\n\n\nexport const getCastMovie = async ({movieId}) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`)\n    return response;\n}\n\nexport const getReviewsMovie = async ({movieId}) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response;\n}"],"names":["useState","review","setReview","movieId","useParams","useEffect","fetchReviewsMovie","getReviewsMovie","data","console","log","name","total_pages","results","map","author","content","BASE_URL","KEY","getSearchTrendingMovies","axios","response","getSearchQueryMovies","query","page","getMoviesDetails","getCastMovie"],"sourceRoot":""}