{"version":3,"file":"static/js/399.43f3e6e9.chunk.js","mappings":"yOAkDA,UA5CkB,WAClB,OAAwBA,EAAAA,EAAAA,UAAS,MAAjC,eAAOC,EAAP,KAAaC,EAAb,KAGOC,GAAWC,EAAAA,EAAAA,MAAXD,QACPE,QAAQC,IAAIH,GAmBZ,OAhBAI,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAc,mCAAG,uFACfL,EADe,2EAMIM,EAAAA,EAAAA,IAAa,CAACN,QAAAA,IANlB,OAMTO,EANS,OAOfR,EAAQQ,GAPO,gDASfL,QAAQC,IAAI,KAAMK,MATH,yDAAH,qDAYpBH,GACH,GAAE,CAACL,IAGJF,IACI,wBACHA,EAAKS,KAAKT,KAAKW,KAAI,gBAAED,EAAF,EAAEA,KAAME,EAAR,EAAQA,UAAWC,EAAnB,EAAmBA,aAAcC,EAAjC,EAAiCA,GAAjC,OAEpB,0BACKD,GAAe,gBAAKE,IAAG,UAxBP,mCAwBO,OAAoBF,GAAgBG,IAAKN,KAAU,gBAAKK,IAAKE,EAAKD,IAAKN,KAC/F,uBAAIA,KACJ,0BAAG,sCAAH,IAAsBE,OAHjBE,EAFW,KAenB,C,2MC9CKI,EAAW,+BACXC,EAAM,mCAECC,EAAuB,mCAAG,oGACZC,IAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IADxC,cAC7BG,EAD6B,yBAE5BA,GAF4B,2CAAH,qDAKvBC,EAAoB,mCAAG,wGAASC,MAAAA,OAAT,MAAiB,GAAjB,MAAqBC,KAAAA,OAArB,MAA4B,EAA5B,WACTJ,IAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,gCAAyEM,EAAzE,sCAA2GD,IADlG,cAC1BF,EAD0B,yBAEzBA,GAFyB,2CAAH,sDAMpBI,EAAgB,mCAAG,8FAASxB,EAAT,EAASA,QAAT,SACLmB,IAAAA,IAAA,UAAaH,EAAb,kBAA+BhB,EAA/B,oBAAkDiB,EAAlD,oBADK,cACtBG,EADsB,yBAErBA,GAFqB,2CAAH,sDAMhBd,EAAY,mCAAG,8FAAQN,EAAR,EAAQA,QAAR,SACDmB,IAAAA,IAAA,UAAaH,EAAb,kBAA+BhB,EAA/B,4BAA0DiB,IADzD,cAClBG,EADkB,yBAEjBA,GAFiB,2CAAH,sDAKZK,EAAe,mCAAG,8FAAQzB,EAAR,EAAQA,QAAR,SACJmB,IAAAA,IAAA,UAAaH,EAAb,kBAA+BhB,EAA/B,4BAA0DiB,EAA1D,2BADI,cACrBG,EADqB,yBAEpBA,GAFoB,2CAAH,qD","sources":["components/MoreInfoAboutMovie/CastMovie.jsx","services/getSearchMovies.jsx"],"sourcesContent":["import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getCastMovie } from 'services/getSearchMovies';\nimport img from '../img/imageNotFound.png';\n\n\nconst CastMovie = () => {\nconst [cast, setCast] = useState(null);\n\n\nconst {movieId} = useParams();\nconsole.log(movieId)\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nuseEffect(()=> {\n    const fetchCastMovie = async () => {\n        if(!movieId) {\n            return;\n        }\n\n        try {\n            const data = await getCastMovie({movieId});\n            setCast(data);\n        } catch (error) {\n            console.log(error.name)\n        }\n    }\n    fetchCastMovie();\n}, [movieId]);\n\nreturn (\ncast && (\n    <ul>\n{cast.data.cast.map(({name, character, profile_path, id}) => (\n\n<li key={id}>\n    {profile_path ? <img src={`${IMG_BASE_URL}${profile_path}`} alt={name}/> : <img src={img} alt={name}/>}\n    <p>{name}</p>\n    <p><b>Character:</b> {character}</p>\n\n</li>\n\n))}\n</ul>\n   )\n\n)\n\n}\n\nexport default CastMovie;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'f17c8764406c58be1dc553dcf8d1d1db';\n\nexport const getSearchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    return response;\n}\n\nexport const getSearchQueryMovies = async ({ query = '', page = 1}) => {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`)\n    return response;\n    \n}\n\nexport const getMoviesDetails = async ( {movieId} ) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`)\n    return response;\n}\n\n\nexport const getCastMovie = async ({movieId}) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`)\n    return response;\n}\n\nexport const getReviewsMovie = async ({movieId}) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response;\n}"],"names":["useState","cast","setCast","movieId","useParams","console","log","useEffect","fetchCastMovie","getCastMovie","data","name","map","character","profile_path","id","src","alt","img","BASE_URL","KEY","getSearchTrendingMovies","axios","response","getSearchQueryMovies","query","page","getMoviesDetails","getReviewsMovie"],"sourceRoot":""}