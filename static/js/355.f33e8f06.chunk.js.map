{"version":3,"file":"static/js/355.f33e8f06.chunk.js","mappings":"+LAEaA,E,QAAeC,GAAAA,IAAH,0E,SCczB,EAbe,WACX,OACI,SAACD,EAAD,WACA,SAAC,KAAD,CACIE,SAAS,EACTC,OAAO,MACPC,MAAM,MACNC,MAAM,WAIjB,C,4KCZYC,EAAcL,EAAAA,GAAAA,GAAH,yN,SCkBxB,EAhB0B,SAAC,GAAc,IAAbM,EAAY,EAAZA,OAC3B,OACG,SAACD,EAAD,UACKC,EAAOC,KAAKC,QAAQC,KAAI,gBAAEC,EAAF,EAAEA,OAAQC,EAAV,EAAUA,QAAV,OACrB,2BACI,wBAAG,oCAAYD,EAAZ,UACH,uBAAIC,MAFCA,EADY,KAQhC,ECbYC,EAAOZ,EAAAA,GAAAA,EAAH,sHC+CjB,EA1CqB,WAEjB,OAA4Ba,EAAAA,EAAAA,UAAS,MAArC,eAAOP,EAAP,KAAeQ,EAAf,KACA,GAA0BD,EAAAA,EAAAA,UAAS,MAAnC,eAAOE,EAAP,KAAcC,EAAd,KACA,GAAkCH,EAAAA,EAAAA,WAAS,GAA3C,eAAOI,EAAP,KAAkBC,EAAlB,KAEOC,GAAWC,EAAAA,EAAAA,MAAXD,QA0BP,OAxBAE,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,uFAClBH,EADkB,wDAKtBD,GAAa,GALS,mBAQCK,EAAAA,EAAAA,IAAgB,CAAEJ,QAAAA,IARnB,OAQZZ,EARY,OASlBO,EAAUP,GATQ,kDAYlBS,EAAS,EAAD,IAZU,yBAelBE,GAAa,GAfK,6EAAH,qDAmBvBI,GAEH,GAAE,CAACH,KAGA,gCACKb,GAAsC,IAA5BA,EAAOC,KAAKiB,cAAqB,SAACZ,EAAD,wDAC3CN,IAAU,SAAC,EAAD,CAAkBA,OAAQA,IACpCW,IAAa,SAACQ,EAAA,EAAD,IACbV,IAAS,qDAGrB,C,2MC7CKW,EAAW,+BACXC,EAAM,mCAECC,EAAuB,mCAAG,oGACZC,IAAAA,IAAA,UAAaH,EAAb,uCAAoDC,IADxC,cAC7BG,EAD6B,yBAE5BA,GAF4B,2CAAH,qDAKvBC,EAAoB,mCAAG,wGAASC,MAAAA,OAAT,MAAiB,GAAjB,MAAqBC,KAAAA,OAArB,MAA4B,EAA5B,WACTJ,IAAAA,IAAA,UAAaH,EAAb,iCAA8CC,EAA9C,gCAAyEM,EAAzE,sCAA2GD,IADlG,cAC1BF,EAD0B,yBAEzBA,GAFyB,2CAAH,sDAMpBI,EAAgB,mCAAG,8FAASf,EAAT,EAASA,QAAT,SACLU,IAAAA,IAAA,UAAaH,EAAb,kBAA+BP,EAA/B,oBAAkDQ,EAAlD,oBADK,cACtBG,EADsB,yBAErBA,GAFqB,2CAAH,sDAMhBK,EAAY,mCAAG,8FAAShB,EAAT,EAASA,QAAT,SACDU,IAAAA,IAAA,UAAaH,EAAb,kBAA+BP,EAA/B,4BAA0DQ,IADzD,cAClBG,EADkB,yBAEjBA,GAFiB,2CAAH,sDAKZP,EAAe,mCAAG,8FAASJ,EAAT,EAASA,QAAT,SACJU,IAAAA,IAAA,UAAaH,EAAb,kBAA+BP,EAA/B,4BAA0DQ,EAA1D,2BADI,cACrBG,EADqB,yBAEpBA,GAFoB,2CAAH,qD","sources":["components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","components/ReviewsMovie/ReviewsMovieInfo/ReviewsMovieInfoStyled.js","components/ReviewsMovie/ReviewsMovieInfo/ReviewsMovieInfo.jsx","components/ReviewsMovie/ReviewsMovieStyled.js","components/ReviewsMovie/ReviewsMovie.jsx","services/getSearchMovies.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const LoaderStyled = styled.div`\n    display: flex;\n    justify-content: center;\n`","import { Vortex } from  'react-loader-spinner';\nimport { LoaderStyled } from './LoaderStyled';\n\nconst Loader = () => {\n    return (    \n        <LoaderStyled>\n        <Vortex \n            visible={true} \n            height=\"100\" \n            width=\"100\"\n            color='black'\n        />\n        </LoaderStyled>\n    )\n}\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const ReviewsList = styled.ul`\n    padding-top: 20px;\n    padding-bottom: 30px;\n\n    li {\n        margin-bottom: 15px;\n    }\n\n    p {\n        :not(:last-child) {\n            margin-bottom: 15px;\n        } \n    }\n`\n\n","import PropTypes from 'prop-types';\nimport { ReviewsList } from './ReviewsMovieInfoStyled';\n\n\n const ReviewsMovieInfo = ({review}) => {\n return (\n    <ReviewsList>\n        {review.data.results.map(({author, content}) => (\n            <li key={content}>\n                <p><b>Author: {author} </b></p>\n                <p>{content}</p>    \n            </li>\n        ))}\n    </ReviewsList>\n )\n}\n\nReviewsMovieInfo.propTypes = {\n    review: PropTypes.object.isRequired,\n}\nexport default ReviewsMovieInfo;","import styled from 'styled-components';\n\nexport const Text = styled.p`\n    margin-top: 20px;\n    margin-bottom: 30px;\n    font-size: 18px;\n    font-weight: 500;\n`","import { useParams } from 'react-router-dom';\nimport { useState, useEffect } from 'react';\nimport { getReviewsMovie } from 'services/getSearchMovies';\nimport Loader from \"components/Loader/Loader\";\nimport ReviewsMovieInfo from './ReviewsMovieInfo/ReviewsMovieInfo';\nimport { Text } from './ReviewsMovieStyled';\n\nconst ReviewsMovie = () => {\n    \n    const [review, setReview] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const {movieId} = useParams();\n        \n    useEffect(()=> {\n        const fetchReviewsMovie = async () => {\n            if(!movieId) {\n                return;\n            }\n\n            setIsLoading(true);\n            \n            try {\n                const data = await getReviewsMovie({ movieId });\n                setReview(data);\n            } \n            catch (error) {\n                setError(error)\n            } \n            finally {\n                setIsLoading(false);\n            }\n        }\n\n        fetchReviewsMovie();\n\n    }, [movieId]);\n\n    return (\n        <>\n            {review && review.data.total_pages === 0 && <Text>We don't have any reviews for this movie!</Text>}\n            {review && <ReviewsMovieInfo review={review}/>}\n            {isLoading && <Loader/>}\n            {error && <p>Please try again later!</p>}\n        </>\n    )\n}\n        \nexport default ReviewsMovie;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'f17c8764406c58be1dc553dcf8d1d1db';\n\nexport const getSearchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    return response;\n}\n\nexport const getSearchQueryMovies = async ({ query = '', page = 1}) => {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`)\n    return response;\n    \n}\n\nexport const getMoviesDetails = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`)\n    return response;\n}\n\n\nexport const getCastMovie = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`)\n    return response;\n}\n\nexport const getReviewsMovie = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response;\n}"],"names":["LoaderStyled","styled","visible","height","width","color","ReviewsList","review","data","results","map","author","content","Text","useState","setReview","error","setError","isLoading","setIsLoading","movieId","useParams","useEffect","fetchReviewsMovie","getReviewsMovie","total_pages","Loader","BASE_URL","KEY","getSearchTrendingMovies","axios","response","getSearchQueryMovies","query","page","getMoviesDetails","getCastMovie"],"sourceRoot":""}