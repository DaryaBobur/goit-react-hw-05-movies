{"version":3,"file":"static/js/297.4dbb7e86.chunk.js","mappings":"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","sources":["components/AppBar/AppBar.jsx","components/Loader/Loader.jsx","components/MoviesList/MoviesList.jsx","components/FormSearchMovies/FormSearchMovies.jsx","pages/Movies/Movies.jsx","services/getSearchMovies.jsx"],"sourcesContent":["import { NavLink } from \"react-router-dom\";\n\nconst navItems = [\n    { href: '/', text: 'Home' },\n    { href: '/movies', text: 'Movies' },\n];\n\nconst AppBar = () => {\n    return (\n        <div>\n            {navItems.map(({ href, text }) => (\n                <NavLink to={href} key={href}>{text}</NavLink>\n            ))}\n        </div>\n    )\n}\n\nexport default AppBar;\n","import { Vortex } from  'react-loader-spinner';\n\nconst Loader = () => {\n    return (    \n        <Vortex \n            visible={true} \n            height=\"100\" \n            width=\"100\"\n            color='black'\n            wrapperStyle={{marginRight: 'auto',\n            marginLeft: 'auto'}}\n        />\n    )\n}\n\nexport default Loader;","import { NavLink, useLocation } from \"react-router-dom\";\n\nconst MoviesList = ({ items }) => {\n    const item = items.data.results;\n\n    const location = useLocation();\n\nreturn (\n    <ul>\n        {item.map(({title, id}) => (\n        <li key={id}>\n        <NavLink state={{from: location}} to={`${id}`}><h2>{title}</h2></NavLink>\n        </li>\n        ))} \n    </ul>\n)\n}\n\nexport default MoviesList;","import { useState } from 'react';\n\nimport PropTypes from 'prop-types';\n\nimport { toast } from 'react-toastify';\n\nimport { FaSearch } from \"react-icons/fa\";\n\nconst FormSearchMovies = ({ onSubmit }) => {\n\n  const [searchQuery, setSearchQuery] = useState('');\n\n\n  const handleSearchQuery = e => {\n    setSearchQuery(e.currentTarget.value.toLowerCase().trim());\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    if(searchQuery.trim() === '' ) {\n      toast.error('Please enter a word to search for movies!')\n      return;\n    }\n    \n    onSubmit(searchQuery);\n    resetForm();\n  };\n\n  const resetForm = () => {\n    setSearchQuery('');\n  }\n\n  return (\n    <>\n      <form onSubmit={handleSubmit}>\n      \n        <button type=\"submit\">\n          <FaSearch fontSize={18}/>\n        </button>\n      \n        <input\n            type=\"text\"\n            autoComplete=\"off\"\n            autoFocus\n            placeholder=\"Search images and photos\"\n            onChange={handleSearchQuery}\n            name=\"searchQuery\"\n            value={searchQuery}\n         />\n      </form>\n    </>\n  )\n}\n\nFormSearchMovies.propTypes = {\n  onSubmit: PropTypes.func,\n}\n\nexport default FormSearchMovies;","\nimport { useState, useEffect } from \"react\";\nimport { useSearchParams } from \"react-router-dom\";\nimport AppBar from \"components/AppBar/AppBar\";\nimport FormSearchMovies from \"components/FormSearchMovies/FormSearchMovies\";\nimport { getSearchQueryMovies } from \"services/getSearchMovies\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\n\nimport Loader from \"components/Loader/Loader\";\n\n\nconst Movies = () => {\n\n    const [items, setItems] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n      const [searchParams, setSearchParams] = useSearchParams();\n      const query = searchParams.get(\"query\");\n\n  \n    const onChangeQuery = query => {\n     setSearchParams({query : query});\n       setItems([]);\n    };\n\n    useEffect(() => {\n  \n        const getSearchMovies = async () => {\n\n          if(!query) {\n            return;\n          }      \n          setIsLoading(true);\n    \n          try {\n            const data = await getSearchQueryMovies({query});\n            setItems(data)\n            } \n            catch (error) {\n              setError(error);\n            } \n            finally {\n              setIsLoading(false);\n          }\n        }\n    \n        getSearchMovies();\n    \n      }, [query])\n    \n\n    \n\n\n    return (\n        <>\n        <AppBar/>\n        <FormSearchMovies onSubmit={onChangeQuery}/>\n        {items.length !== 0 && <MoviesList items={items} />}\n\n        \n        {isLoading && <Loader/>}\n        {error && <p>Please try again later!</p>}\n    \n        </>\n    )\n}\n\nexport default Movies;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'f17c8764406c58be1dc553dcf8d1d1db';\n\nexport const getSearchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    return response;\n}\n\nexport const getSearchQueryMovies = async ({ query = '', page = 1}) => {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`)\n    return response;\n    \n}\n\nexport const getMoviesDetails = async ( {movieId} ) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`)\n    return response;\n}\n\n\nexport const getCastMovie = async ({movieId}) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`)\n    return response;\n}\n\nexport const getReviewsMovie = async ({movieId}) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response;\n}"],"names":["navItems","href","text","map","to","visible","height","width","color","wrapperStyle","marginRight","marginLeft","item","items","data","results","location","useLocation","title","id","state","from","onSubmit","useState","searchQuery","setSearchQuery","resetForm","e","preventDefault","trim","toast","type","fontSize","autoComplete","autoFocus","placeholder","onChange","currentTarget","value","toLowerCase","name","setItems","isLoading","setIsLoading","error","setError","useSearchParams","searchParams","setSearchParams","query","get","useEffect","getSearchMovies","getSearchQueryMovies","AppBar","length","MoviesList","Loader","BASE_URL","KEY","getSearchTrendingMovies","axios","response","page","getMoviesDetails","movieId","getCastMovie","getReviewsMovie"],"sourceRoot":""}