{"version":3,"file":"static/js/137.a87facf0.chunk.js","mappings":"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","sources":["components/AppBar/AppBarStyled.js","components/AppBar/AppBar.jsx","components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","components/MoviesList/MovieListStyled.js","components/MoviesList/MoviesList.jsx","pages/Home/HomeStyled.js","pages/Home/Home.jsx","services/getSearchMovies.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 18px;\n  font-weight: 500;\n  text-decoration: none;\n  color: #2a2a2a;\n  padding-bottom: 15px;\n  padding-top: 15px;\n\n  &.active {\n      color: red;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: pink;\n  }\n`\n\nexport const NavList = styled.ul`\n  display: flex;\n  padding-right: 20px;\n`\n\nexport const NavItem = styled.li`\n  display: flex;\n\n  :not(:last-child) {\n    margin-right: 15px;\n  }\n`\n\nexport const Header = styled.header`\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n`","import { StyledLink, NavItem, NavList, Header } from \"./AppBarStyled\";\n\nconst navItems = [\n  { href: '/', text: 'Home' },\n  { href: '/movies', text: 'Movies' },\n];\n\nconst AppBar = () => {\n    return (\n        <Header>\n            <NavList>\n                {navItems.map(({ href, text }) => {\n                    if(href.includes(\"/movies\")) {\n                        return (\n                            <NavItem key={href}>\n                                <StyledLink to={href}>{text}</StyledLink>\n                            </NavItem>\n                        )\n                    }    \n\n                    return (\n                        <NavItem key={href}>\n                            <StyledLink to={href} end>{text}</StyledLink>\n                        </NavItem>\n                    )\n                })}\n            </NavList>\n        </Header>\n    )\n}\n\nexport default AppBar;\n","import styled from 'styled-components';\n\nexport const LoaderStyled = styled.div`\n    display: flex;\n    justify-content: center;\n`","import { Vortex } from  'react-loader-spinner';\nimport { LoaderStyled } from './LoaderStyled';\n\nconst Loader = () => {\n    return (    \n        <LoaderStyled>\n        <Vortex \n            visible={true} \n            height=\"100\" \n            width=\"100\"\n            color='black'\n        />\n        </LoaderStyled>\n    )\n}\n\nexport default Loader;","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const MovieItem = styled.li`\n    :not(:last-child) {\n        margin-bottom: 15px;\n    }\n`\n\nexport const MovieLink = styled(NavLink)`\n    display: inline-block;\n    font-size: 12px;\n`\n\nexport const Container = styled.div`\n    padding-right: 20px;\n    padding-left: 20px;\n`","import { useLocation } from \"react-router-dom\";\nimport PropTypes from 'prop-types';\nimport { MovieItem, MovieLink } from \"./MovieListStyled\";\n\nconst MoviesList = ({ items }) => {\n    const item = items.data.results;\n    const location = useLocation();\n\n    return (\n        <ul>\n            {item.map(({title, id}) => (\n                <MovieItem key={id}>\n                    <MovieLink state={{from: location}} to={`/movies/${id}`}>\n                        <h2>{title}</h2>\n                    </MovieLink>\n                </MovieItem>\n            ))} \n        </ul>\n    )\n}\n\nMoviesList.propTypes = {\n    items: PropTypes.object.isRequired,\n}\n\nexport default MoviesList;","import styled from 'styled-components';\n\nexport const Title = styled.h1`\n    margin-top: 20px;\n    margin-bottom: 20px;\n`","import { useState, useEffect } from \"react\";\nimport AppBar from \"components/AppBar/AppBar\";\nimport Loader from \"components/Loader/Loader\";\nimport MoviesList from \"components/MoviesList/MoviesList\";\nimport { getSearchTrendingMovies } from \"services/getSearchMovies\";\nimport { Title } from \"./HomeStyled\";\nimport { Container } from \"components/MoviesList/MovieListStyled\";\n\nconst Home = () => {\n    const [items, setItems] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n\n        const fetchTrendingMovies = async () => {\n            setIsLoading(true);      \n            try {  \n                const data = await getSearchTrendingMovies();\n                setItems(data);\n            } \n            catch (error) {\n                setError(error)\n            } \n            finally {\n                setIsLoading(false);\n            }\n        }\n\n        fetchTrendingMovies();\n\n    }, [])\n\n    return (\n        <>\n            <AppBar/>\n\n            {items.length !== 0 && (\n                <Container>\n                    <Title>Trending movies</Title>\n                    <MoviesList items={items}/>\n                </Container>\n            )}\n\n            {isLoading && <Loader/>}\n            {error && <p>Please try again later!</p>}         \n        </>\n    )\n}\n\nexport default Home;","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'f17c8764406c58be1dc553dcf8d1d1db';\n\nexport const getSearchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    return response;\n}\n\nexport const getSearchQueryMovies = async ({ query = '', page = 1}) => {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`)\n    return response;\n    \n}\n\nexport const getMoviesDetails = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`)\n    return response;\n}\n\n\nexport const getCastMovie = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`)\n    return response;\n}\n\nexport const getReviewsMovie = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response;\n}"],"names":["StyledLink","styled","NavLink","NavList","NavItem","Header","navItems","href","text","map","includes","to","end","LoaderStyled","visible","height","width","color","MovieItem","MovieLink","Container","item","items","data","results","location","useLocation","title","id","state","from","Title","useState","setItems","isLoading","setIsLoading","error","setError","useEffect","fetchTrendingMovies","getSearchTrendingMovies","AppBar","length","MoviesList","Loader","BASE_URL","KEY","axios","response","getSearchQueryMovies","query","page","getMoviesDetails","movieId","getCastMovie","getReviewsMovie"],"sourceRoot":""}