{"version":3,"file":"static/js/174.f02ee2f9.chunk.js","mappings":"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","sources":["components/AppBar/AppBarStyled.js","components/AppBar/AppBar.jsx","components/Loader/LoaderStyled.js","components/Loader/Loader.jsx","components/MoreInfoAboutMovie/MoreInfoAboutMovieStyled.js","components/MoreInfoAboutMovie/MoreInfoAboutMovie.jsx","pages/MovieDetails/MovieInfo/MovieInfoStyled.js","pages/MovieDetails/MovieInfo/MovieInfo.jsx","pages/MovieDetails/MovieDetailsStyled.js","pages/MovieDetails/MovieDetails.jsx","services/getSearchMovies.jsx"],"sourcesContent":["import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const StyledLink = styled(NavLink)`\n  font-size: 18px;\n  font-weight: 500;\n  text-decoration: none;\n  color: #2a2a2a;\n  padding-bottom: 15px;\n  padding-top: 15px;\n\n  &.active {\n      color: red;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: pink;\n  }\n`\n\nexport const NavList = styled.ul`\n  display: flex;\n  padding-right: 20px;\n`\n\nexport const NavItem = styled.li`\n  display: flex;\n\n  :not(:last-child) {\n    margin-right: 15px;\n  }\n`\n\nexport const Header = styled.header`\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n`","import { StyledLink, NavItem, NavList, Header } from \"./AppBarStyled\";\n\nconst navItems = [\n  { href: '/', text: 'Home' },\n  { href: '/movies', text: 'Movies' },\n];\n\nconst AppBar = () => {\n    return (\n        <Header>\n            <NavList>\n                {navItems.map(({ href, text }) => {\n                    if(href.includes(\"/movies\")) {\n                        return (\n                            <NavItem key={href}>\n                                <StyledLink to={href}>{text}</StyledLink>\n                            </NavItem>\n                        )\n                    }    \n\n                    return (\n                        <NavItem key={href}>\n                            <StyledLink to={href} end>{text}</StyledLink>\n                        </NavItem>\n                    )\n                })}\n            </NavList>\n        </Header>\n    )\n}\n\nexport default AppBar;\n","import styled from 'styled-components';\n\nexport const LoaderStyled = styled.div`\n    display: flex;\n    justify-content: center;\n`","import { Vortex } from  'react-loader-spinner';\nimport { LoaderStyled } from './LoaderStyled';\n\nconst Loader = () => {\n    return (    \n        <LoaderStyled>\n        <Vortex \n            visible={true} \n            height=\"100\" \n            width=\"100\"\n            color='black'\n        />\n        </LoaderStyled>\n    )\n}\n\nexport default Loader;","import styled from 'styled-components';\n\nexport const Wrap = styled.div`\n    padding-top: 30px;\n    padding-bottom: 10px;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n\n    h2 {\n        margin-bottom: 15px;\n        font-size: 18px;\n    }\n`","import { NavLink, useLocation } from 'react-router-dom';\nimport { Wrap } from './MoreInfoAboutMovieStyled';\nconst MoreInfoAboutMovie = () => {\n    \n    const location = useLocation();\n    const from = location.state?.from ?? \"/movies\";\n\n    return (\n        <Wrap>\n            <h2>Additional information</h2>\n\n            <ul>\n                <li>\n                    <NavLink state={{from}} to=\"cast\">Cast</NavLink>\n                </li>\n                \n                <li>\n                    <NavLink state={{from}} to=\"reviews\">Reviews</NavLink>\n                </li>\n            </ul>\n        </Wrap>\n    )\n}\n\nexport default MoreInfoAboutMovie;","import styled from 'styled-components';\n\nexport const Section = styled.div`\n    display: flex;\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.15);\n    padding-bottom: 10px;\n\n    p {\n        margin-bottom: 15px;\n    }\n\n    h3 {\n        margin-bottom: 10px;\n    }\n`\n\nexport const Container = styled.div`\n    display: block;\n    margin-top: 30px;\n    padding-left: 20px;\n`\n\nexport const MovieName = styled.h2`\n    font-size: 24px;\n    margin-bottom: 15px;\n` \nexport const Poster = styled.img`\n    width: 250px;\n    height: auto;\n    display: block;\n`\n\nexport const Genres = styled.div`\n    display: flex;\n\n    p {\n        :not(:last-child) {\n            margin-right: 10px;\n        }\n    }\n\n`\n","import PropTypes from 'prop-types';\nimport { MovieName, Section, Container, Poster, Genres } from './MovieInfoStyled';\n\nconst IMG_BASE_URL = 'https://image.tmdb.org/t/p/w500';\n\nconst MovieInfo = ({ movie }) => {\n    const {title, poster_path, vote_average, overview, genres, release_date } = movie.data;\n    \n    const userScore = () => {\n        return Math.round(Number(vote_average) * 10) + '%';\n    }\n\n    return (\n        <Section>\n            \n            <Poster src={`${IMG_BASE_URL}${poster_path}`} alt={title} />\n            <Container>\n                <MovieName>{title} ({release_date.slice(0,4)})</MovieName>\n                <p>User score: {userScore()}</p>\n                <h3>Overview</h3>\n                <p>{overview}</p>\n                <h3>Genres</h3>\n                <Genres>\n                    {genres.map(({ name, id }) => (\n                        <p key={id}>{name}</p>\n                    ))}\n                </Genres>\n            </Container>\n            \n        </Section>\n    )\n}\n\nMovieInfo.propTypes = {\n    movie: PropTypes.object.isRequired,\n}\n\nexport default MovieInfo;","import styled from 'styled-components';\n\nexport const ButtonGoBack = styled.button`\n    display: flex;\n    align-items: center;\n    min-width: 30px;\n    border: 0;\n    padding: 5px 5px;\n    margin-top: 15px;\n    margin-bottom: 15px;\n   \n    border-radius: 4px;\n    color: #2a2a2a;\n    \n    font-weight: 700;\n    font-size: 12px;\n    line-height: 1.88;\n    letter-spacing: 0.06em;\n    background-color: #e0e0e0;\n    cursor: pointer;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n    :hover, :focus {\n        background-color: #757575;\n        color: #ffffff;\n    }\n`","import { useState, useEffect, Suspense } from 'react';\nimport { useParams, useNavigate, Outlet, useLocation  } from 'react-router-dom';\nimport { getMoviesDetails } from 'services/getSearchMovies';\nimport MoreInfoAboutMovie from 'components/MoreInfoAboutMovie/MoreInfoAboutMovie';\nimport Loader from \"components/Loader/Loader\";\nimport AppBar from 'components/AppBar/AppBar';\nimport MovieInfo from 'pages/MovieDetails/MovieInfo/MovieInfo';\nimport { ButtonGoBack } from './MovieDetailsStyled';\nimport { HiArrowSmLeft } from \"react-icons/hi\";\n\nconst MovieDetails = () => {\n    \n    const [movie, setMovie] = useState(null);\n    const [error, setError] = useState(null);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const { movieId } = useParams();\n    const navigate = useNavigate();\n    const location = useLocation();\n    const from = location.state?.from ?? \"/movies\";\n\n    useEffect(()=> {\n    \n        const fetchMovie = async () => {\n\n            if(!movieId) {\n                return;\n            }\n\n            setIsLoading(true);\n\n            try {\n                const data = await getMoviesDetails({movieId});\n                setMovie(data);\n            } \n            catch (error) {\n                setError(error)\n            }\n            finally {\n                setIsLoading(false);\n            }\n        }\n\n        fetchMovie();\n\n    }, [movieId])\n\n    const goBack = () => navigate(from);\n\n    return (\n        <>\n            <AppBar />\n            {movie && <ButtonGoBack type=\"button\" onClick={goBack}><HiArrowSmLeft fontSize={18}/>Go back</ButtonGoBack>}\n            {isLoading && <Loader/>}\n            {movie && <MovieInfo movie={movie}/>}\n            {movie && <MoreInfoAboutMovie/>}\n            {error && <p>Please try again later!</p>}\n            <Suspense fallback={<Loader/>}>\n                <Outlet />\n            </Suspense>\n        </>\n    )\n}\n\nexport default MovieDetails;\n\n","import axios from \"axios\";\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY = 'f17c8764406c58be1dc553dcf8d1d1db';\n\nexport const getSearchTrendingMovies = async () => {\n    const response = await axios.get(`${BASE_URL}/trending/movie/day?api_key=${KEY}`);\n    return response;\n}\n\nexport const getSearchQueryMovies = async ({ query = '', page = 1}) => {\n    const response = await axios.get(`${BASE_URL}/search/movie?api_key=${KEY}&language=en-US&page=${page}&include_adult=false&query=${query}`)\n    return response;\n    \n}\n\nexport const getMoviesDetails = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}?api_key=${KEY}&language=en-US`)\n    return response;\n}\n\n\nexport const getCastMovie = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/credits?api_key=${KEY}`)\n    return response;\n}\n\nexport const getReviewsMovie = async ({ movieId }) => {\n    const response = await axios.get(`${BASE_URL}/movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`)\n    return response;\n}"],"names":["StyledLink","styled","NavLink","NavList","NavItem","Header","navItems","href","text","map","includes","to","end","LoaderStyled","visible","height","width","color","Wrap","from","useLocation","state","Section","Container","MovieName","Poster","Genres","movie","data","title","poster_path","vote_average","overview","genres","release_date","src","alt","slice","Math","round","Number","name","id","ButtonGoBack","useState","setMovie","error","setError","isLoading","setIsLoading","movieId","useParams","navigate","useNavigate","useEffect","fetchMovie","getMoviesDetails","AppBar","type","onClick","fontSize","Loader","Suspense","fallback","BASE_URL","KEY","getSearchTrendingMovies","axios","response","getSearchQueryMovies","query","page","getCastMovie","getReviewsMovie"],"sourceRoot":""}